/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicOrderStepDto } from './PublicOrderStepDto';
import {
    PublicOrderStepDtoFromJSON,
    PublicOrderStepDtoFromJSONTyped,
    PublicOrderStepDtoToJSON,
    PublicOrderStepDtoToJSONTyped,
} from './PublicOrderStepDto';
import type { OrderStatus } from './OrderStatus';
import {
    OrderStatusFromJSON,
    OrderStatusFromJSONTyped,
    OrderStatusToJSON,
    OrderStatusToJSONTyped,
} from './OrderStatus';
import type { OrderType } from './OrderType';
import {
    OrderTypeFromJSON,
    OrderTypeFromJSONTyped,
    OrderTypeToJSON,
    OrderTypeToJSONTyped,
} from './OrderType';
import type { PublicOfferWithPlanDto } from './PublicOfferWithPlanDto';
import {
    PublicOfferWithPlanDtoFromJSON,
    PublicOfferWithPlanDtoFromJSONTyped,
    PublicOfferWithPlanDtoToJSON,
    PublicOfferWithPlanDtoToJSONTyped,
} from './PublicOfferWithPlanDto';
import type { PublicSimSelectionDataDto } from './PublicSimSelectionDataDto';
import {
    PublicSimSelectionDataDtoFromJSON,
    PublicSimSelectionDataDtoFromJSONTyped,
    PublicSimSelectionDataDtoToJSON,
    PublicSimSelectionDataDtoToJSONTyped,
} from './PublicSimSelectionDataDto';
import type { PublicPortInDataDto } from './PublicPortInDataDto';
import {
    PublicPortInDataDtoFromJSON,
    PublicPortInDataDtoFromJSONTyped,
    PublicPortInDataDtoToJSON,
    PublicPortInDataDtoToJSONTyped,
} from './PublicPortInDataDto';

/**
 * 
 * @export
 * @interface PublicOrderWithOfferDto
 */
export interface PublicOrderWithOfferDto {
    /**
     * 
     * @type {OrderType}
     * @memberof PublicOrderWithOfferDto
     */
    type: OrderType;
    /**
     * 
     * @type {OrderStatus}
     * @memberof PublicOrderWithOfferDto
     */
    status: OrderStatus;
    /**
     * 
     * @type {string}
     * @memberof PublicOrderWithOfferDto
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof PublicOrderWithOfferDto
     */
    startedAt: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PublicOrderWithOfferDto
     */
    completedAt: Date | null;
    /**
     * 
     * @type {PublicOrderStepDto}
     * @memberof PublicOrderWithOfferDto
     */
    currentStep: PublicOrderStepDto | null;
    /**
     * 
     * @type {PublicSimSelectionDataDto}
     * @memberof PublicOrderWithOfferDto
     */
    simSelection: PublicSimSelectionDataDto | null;
    /**
     * 
     * @type {PublicPortInDataDto}
     * @memberof PublicOrderWithOfferDto
     */
    portIn: PublicPortInDataDto | null;
    /**
     * 
     * @type {PublicOfferWithPlanDto}
     * @memberof PublicOrderWithOfferDto
     */
    offer: PublicOfferWithPlanDto | null;
    /**
     * 
     * @type {string}
     * @memberof PublicOrderWithOfferDto
     */
    subscriptionId: string | null;
}



/**
 * Check if a given object implements the PublicOrderWithOfferDto interface.
 */
export function instanceOfPublicOrderWithOfferDto(value: object): value is PublicOrderWithOfferDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('startedAt' in value) || value['startedAt'] === undefined) return false;
    if (!('completedAt' in value) || value['completedAt'] === undefined) return false;
    if (!('currentStep' in value) || value['currentStep'] === undefined) return false;
    if (!('simSelection' in value) || value['simSelection'] === undefined) return false;
    if (!('portIn' in value) || value['portIn'] === undefined) return false;
    if (!('offer' in value) || value['offer'] === undefined) return false;
    if (!('subscriptionId' in value) || value['subscriptionId'] === undefined) return false;
    return true;
}

export function PublicOrderWithOfferDtoFromJSON(json: any): PublicOrderWithOfferDto {
    return PublicOrderWithOfferDtoFromJSONTyped(json, false);
}

export function PublicOrderWithOfferDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicOrderWithOfferDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': OrderTypeFromJSON(json['type']),
        'status': OrderStatusFromJSON(json['status']),
        'id': json['id'],
        'startedAt': (json['startedAt'] == null ? null : new Date(json['startedAt'])),
        'completedAt': (json['completedAt'] == null ? null : new Date(json['completedAt'])),
        'currentStep': PublicOrderStepDtoFromJSON(json['currentStep']),
        'simSelection': PublicSimSelectionDataDtoFromJSON(json['simSelection']),
        'portIn': PublicPortInDataDtoFromJSON(json['portIn']),
        'offer': PublicOfferWithPlanDtoFromJSON(json['offer']),
        'subscriptionId': json['subscriptionId'],
    };
}

export function PublicOrderWithOfferDtoToJSON(json: any): PublicOrderWithOfferDto {
    return PublicOrderWithOfferDtoToJSONTyped(json, false);
}

export function PublicOrderWithOfferDtoToJSONTyped(value?: PublicOrderWithOfferDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': OrderTypeToJSON(value['type']),
        'status': OrderStatusToJSON(value['status']),
        'id': value['id'],
        'startedAt': (value['startedAt'] == null ? null : (value['startedAt'] as any).toISOString()),
        'completedAt': (value['completedAt'] == null ? null : (value['completedAt'] as any).toISOString()),
        'currentStep': PublicOrderStepDtoToJSON(value['currentStep']),
        'simSelection': PublicSimSelectionDataDtoToJSON(value['simSelection']),
        'portIn': PublicPortInDataDtoToJSON(value['portIn']),
        'offer': PublicOfferWithPlanDtoToJSON(value['offer']),
        'subscriptionId': value['subscriptionId'],
    };
}

