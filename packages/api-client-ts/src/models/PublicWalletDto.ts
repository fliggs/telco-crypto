/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WalletProvider } from './WalletProvider';
import {
    WalletProviderFromJSON,
    WalletProviderFromJSONTyped,
    WalletProviderToJSON,
    WalletProviderToJSONTyped,
} from './WalletProvider';

/**
 * 
 * @export
 * @interface PublicWalletDto
 */
export interface PublicWalletDto {
    /**
     * 
     * @type {WalletProvider}
     * @memberof PublicWalletDto
     */
    provider: WalletProvider;
    /**
     * 
     * @type {string}
     * @memberof PublicWalletDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PublicWalletDto
     */
    address: string;
    /**
     * 
     * @type {Date}
     * @memberof PublicWalletDto
     */
    cloudBackupAt: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PublicWalletDto
     */
    localBackupAt: Date | null;
}



/**
 * Check if a given object implements the PublicWalletDto interface.
 */
export function instanceOfPublicWalletDto(value: object): value is PublicWalletDto {
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('cloudBackupAt' in value) || value['cloudBackupAt'] === undefined) return false;
    if (!('localBackupAt' in value) || value['localBackupAt'] === undefined) return false;
    return true;
}

export function PublicWalletDtoFromJSON(json: any): PublicWalletDto {
    return PublicWalletDtoFromJSONTyped(json, false);
}

export function PublicWalletDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicWalletDto {
    if (json == null) {
        return json;
    }
    return {
        
        'provider': WalletProviderFromJSON(json['provider']),
        'id': json['id'],
        'address': json['address'],
        'cloudBackupAt': (json['cloudBackupAt'] == null ? null : new Date(json['cloudBackupAt'])),
        'localBackupAt': (json['localBackupAt'] == null ? null : new Date(json['localBackupAt'])),
    };
}

export function PublicWalletDtoToJSON(json: any): PublicWalletDto {
    return PublicWalletDtoToJSONTyped(json, false);
}

export function PublicWalletDtoToJSONTyped(value?: PublicWalletDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'provider': WalletProviderToJSON(value['provider']),
        'id': value['id'],
        'address': value['address'],
        'cloudBackupAt': (value['cloudBackupAt'] == null ? null : (value['cloudBackupAt'] as any).toISOString()),
        'localBackupAt': (value['localBackupAt'] == null ? null : (value['localBackupAt'] as any).toISOString()),
    };
}

