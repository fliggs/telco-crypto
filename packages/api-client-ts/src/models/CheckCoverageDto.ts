/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CheckCoverageDto
 */
export interface CheckCoverageDto {
    /**
     * 
     * @type {string}
     * @memberof CheckCoverageDto
     */
    line1: string;
    /**
     * 
     * @type {string}
     * @memberof CheckCoverageDto
     */
    line2: string;
    /**
     * 
     * @type {string}
     * @memberof CheckCoverageDto
     */
    line3: string;
    /**
     * 
     * @type {string}
     * @memberof CheckCoverageDto
     */
    line4: string;
    /**
     * 
     * @type {string}
     * @memberof CheckCoverageDto
     */
    city: string;
    /**
     * 
     * @type {string}
     * @memberof CheckCoverageDto
     */
    postalCode: string;
    /**
     * 
     * @type {string}
     * @memberof CheckCoverageDto
     */
    province: string;
    /**
     * 
     * @type {string}
     * @memberof CheckCoverageDto
     */
    country: string;
}

/**
 * Check if a given object implements the CheckCoverageDto interface.
 */
export function instanceOfCheckCoverageDto(value: object): value is CheckCoverageDto {
    if (!('line1' in value) || value['line1'] === undefined) return false;
    if (!('line2' in value) || value['line2'] === undefined) return false;
    if (!('line3' in value) || value['line3'] === undefined) return false;
    if (!('line4' in value) || value['line4'] === undefined) return false;
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('postalCode' in value) || value['postalCode'] === undefined) return false;
    if (!('province' in value) || value['province'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    return true;
}

export function CheckCoverageDtoFromJSON(json: any): CheckCoverageDto {
    return CheckCoverageDtoFromJSONTyped(json, false);
}

export function CheckCoverageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckCoverageDto {
    if (json == null) {
        return json;
    }
    return {
        
        'line1': json['line1'],
        'line2': json['line2'],
        'line3': json['line3'],
        'line4': json['line4'],
        'city': json['city'],
        'postalCode': json['postalCode'],
        'province': json['province'],
        'country': json['country'],
    };
}

export function CheckCoverageDtoToJSON(json: any): CheckCoverageDto {
    return CheckCoverageDtoToJSONTyped(json, false);
}

export function CheckCoverageDtoToJSONTyped(value?: CheckCoverageDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'line1': value['line1'],
        'line2': value['line2'],
        'line3': value['line3'],
        'line4': value['line4'],
        'city': value['city'],
        'postalCode': value['postalCode'],
        'province': value['province'],
        'country': value['country'],
    };
}

