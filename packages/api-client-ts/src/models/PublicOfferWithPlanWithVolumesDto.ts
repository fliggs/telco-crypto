/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicContentDto } from './PublicContentDto';
import {
    PublicContentDtoFromJSON,
    PublicContentDtoFromJSONTyped,
    PublicContentDtoToJSON,
    PublicContentDtoToJSONTyped,
} from './PublicContentDto';
import type { PublicPlanWithVolumesDto } from './PublicPlanWithVolumesDto';
import {
    PublicPlanWithVolumesDtoFromJSON,
    PublicPlanWithVolumesDtoFromJSONTyped,
    PublicPlanWithVolumesDtoToJSON,
    PublicPlanWithVolumesDtoToJSONTyped,
} from './PublicPlanWithVolumesDto';

/**
 * 
 * @export
 * @interface PublicOfferWithPlanWithVolumesDto
 */
export interface PublicOfferWithPlanWithVolumesDto {
    /**
     * 
     * @type {string}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    cost: string;
    /**
     * 
     * @type {string}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    originalCost: string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    providedCredits: string | null;
    /**
     * 
     * @type {PublicContentDto}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    content: PublicContentDto;
    /**
     * 
     * @type {string}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    legalId: string;
    /**
     * 
     * @type {number}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    sort: number;
    /**
     * 
     * @type {Date}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    validFrom: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    validUntil: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    planId: string;
    /**
     * 
     * @type {PublicPlanWithVolumesDto}
     * @memberof PublicOfferWithPlanWithVolumesDto
     */
    plan: PublicPlanWithVolumesDto;
}

/**
 * Check if a given object implements the PublicOfferWithPlanWithVolumesDto interface.
 */
export function instanceOfPublicOfferWithPlanWithVolumesDto(value: object): value is PublicOfferWithPlanWithVolumesDto {
    if (!('cost' in value) || value['cost'] === undefined) return false;
    if (!('originalCost' in value) || value['originalCost'] === undefined) return false;
    if (!('providedCredits' in value) || value['providedCredits'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('legalId' in value) || value['legalId'] === undefined) return false;
    if (!('sort' in value) || value['sort'] === undefined) return false;
    if (!('validFrom' in value) || value['validFrom'] === undefined) return false;
    if (!('validUntil' in value) || value['validUntil'] === undefined) return false;
    if (!('planId' in value) || value['planId'] === undefined) return false;
    if (!('plan' in value) || value['plan'] === undefined) return false;
    return true;
}

export function PublicOfferWithPlanWithVolumesDtoFromJSON(json: any): PublicOfferWithPlanWithVolumesDto {
    return PublicOfferWithPlanWithVolumesDtoFromJSONTyped(json, false);
}

export function PublicOfferWithPlanWithVolumesDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicOfferWithPlanWithVolumesDto {
    if (json == null) {
        return json;
    }
    return {
        
        'cost': json['cost'],
        'originalCost': json['originalCost'],
        'providedCredits': json['providedCredits'],
        'content': PublicContentDtoFromJSON(json['content']),
        'id': json['id'],
        'legalId': json['legalId'],
        'sort': json['sort'],
        'validFrom': (json['validFrom'] == null ? null : new Date(json['validFrom'])),
        'validUntil': (json['validUntil'] == null ? null : new Date(json['validUntil'])),
        'planId': json['planId'],
        'plan': PublicPlanWithVolumesDtoFromJSON(json['plan']),
    };
}

export function PublicOfferWithPlanWithVolumesDtoToJSON(json: any): PublicOfferWithPlanWithVolumesDto {
    return PublicOfferWithPlanWithVolumesDtoToJSONTyped(json, false);
}

export function PublicOfferWithPlanWithVolumesDtoToJSONTyped(value?: PublicOfferWithPlanWithVolumesDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cost': value['cost'],
        'originalCost': value['originalCost'],
        'providedCredits': value['providedCredits'],
        'content': PublicContentDtoToJSON(value['content']),
        'id': value['id'],
        'legalId': value['legalId'],
        'sort': value['sort'],
        'validFrom': (value['validFrom'] == null ? null : (value['validFrom'] as any).toISOString()),
        'validUntil': (value['validUntil'] == null ? null : (value['validUntil'] as any).toISOString()),
        'planId': value['planId'],
        'plan': PublicPlanWithVolumesDtoToJSON(value['plan']),
    };
}

