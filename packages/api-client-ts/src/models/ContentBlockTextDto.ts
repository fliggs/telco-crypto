/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContentBlockTextDto
 */
export interface ContentBlockTextDto {
    /**
     * 
     * @type {string}
     * @memberof ContentBlockTextDto
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockTextDto
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockTextDto
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockTextDto
     */
    variant?: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockTextDto
     */
    color?: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockTextDto
     */
    type: string;
}

/**
 * Check if a given object implements the ContentBlockTextDto interface.
 */
export function instanceOfContentBlockTextDto(value: object): value is ContentBlockTextDto {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ContentBlockTextDtoFromJSON(json: any): ContentBlockTextDto {
    return ContentBlockTextDtoFromJSONTyped(json, false);
}

export function ContentBlockTextDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentBlockTextDto {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'text': json['text'],
        'title': json['title'] == null ? undefined : json['title'],
        'variant': json['variant'] == null ? undefined : json['variant'],
        'color': json['color'] == null ? undefined : json['color'],
        'type': json['type'],
    };
}

export function ContentBlockTextDtoToJSON(json: any): ContentBlockTextDto {
    return ContentBlockTextDtoToJSONTyped(json, false);
}

export function ContentBlockTextDtoToJSONTyped(value?: ContentBlockTextDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'text': value['text'],
        'title': value['title'],
        'variant': value['variant'],
        'color': value['color'],
        'type': value['type'],
    };
}

