/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { OnboardingDataAddressDto } from './OnboardingDataAddressDto';
import {
    instanceOfOnboardingDataAddressDto,
    OnboardingDataAddressDtoFromJSON,
    OnboardingDataAddressDtoFromJSONTyped,
    OnboardingDataAddressDtoToJSON,
} from './OnboardingDataAddressDto';
import type { OnboardingDataDto } from './OnboardingDataDto';
import {
    instanceOfOnboardingDataDto,
    OnboardingDataDtoFromJSON,
    OnboardingDataDtoFromJSONTyped,
    OnboardingDataDtoToJSON,
} from './OnboardingDataDto';
import type { OnboardingDataOrderConfirmDto } from './OnboardingDataOrderConfirmDto';
import {
    instanceOfOnboardingDataOrderConfirmDto,
    OnboardingDataOrderConfirmDtoFromJSON,
    OnboardingDataOrderConfirmDtoFromJSONTyped,
    OnboardingDataOrderConfirmDtoToJSON,
} from './OnboardingDataOrderConfirmDto';

/**
 * @type PublicOnboardingStageDtoData
 * 
 * @export
 */
export type PublicOnboardingStageDtoData = { type: 'ADDRESS' } & OnboardingDataAddressDto | { type: 'CONTENT' } & OnboardingDataDto | { type: 'KYC' } & OnboardingDataDto | { type: 'ORDER_CONFIRM' } & OnboardingDataOrderConfirmDto | { type: 'ORDER_MSISDN' } & OnboardingDataDto | { type: 'ORDER_PLAN' } & OnboardingDataDto | { type: 'ORDER_PROCESS' } & OnboardingDataDto | { type: 'ORDER_SIM_TYPE' } & OnboardingDataDto | { type: 'PAYMENT' } & OnboardingDataDto;

export function PublicOnboardingStageDtoDataFromJSON(json: any): PublicOnboardingStageDtoData {
    return PublicOnboardingStageDtoDataFromJSONTyped(json, false);
}

export function PublicOnboardingStageDtoDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicOnboardingStageDtoData {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        case 'ADDRESS':
            return Object.assign({}, OnboardingDataAddressDtoFromJSONTyped(json, true), { type: 'ADDRESS' } as const);
        case 'CONTENT':
            return Object.assign({}, OnboardingDataDtoFromJSONTyped(json, true), { type: 'CONTENT' } as const);
        case 'KYC':
            return Object.assign({}, OnboardingDataDtoFromJSONTyped(json, true), { type: 'KYC' } as const);
        case 'ORDER_CONFIRM':
            return Object.assign({}, OnboardingDataOrderConfirmDtoFromJSONTyped(json, true), { type: 'ORDER_CONFIRM' } as const);
        case 'ORDER_MSISDN':
            return Object.assign({}, OnboardingDataDtoFromJSONTyped(json, true), { type: 'ORDER_MSISDN' } as const);
        case 'ORDER_PLAN':
            return Object.assign({}, OnboardingDataDtoFromJSONTyped(json, true), { type: 'ORDER_PLAN' } as const);
        case 'ORDER_PROCESS':
            return Object.assign({}, OnboardingDataDtoFromJSONTyped(json, true), { type: 'ORDER_PROCESS' } as const);
        case 'ORDER_SIM_TYPE':
            return Object.assign({}, OnboardingDataDtoFromJSONTyped(json, true), { type: 'ORDER_SIM_TYPE' } as const);
        case 'PAYMENT':
            return Object.assign({}, OnboardingDataDtoFromJSONTyped(json, true), { type: 'PAYMENT' } as const);
        default:
            throw new Error(`No variant of PublicOnboardingStageDtoData exists with 'type=${json['type']}'`);
    }
}

export function PublicOnboardingStageDtoDataToJSON(json: any): any {
    return PublicOnboardingStageDtoDataToJSONTyped(json, false);
}

export function PublicOnboardingStageDtoDataToJSONTyped(value?: PublicOnboardingStageDtoData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        case 'ADDRESS':
            return Object.assign({}, OnboardingDataAddressDtoToJSON(value), { type: 'ADDRESS' } as const);
        case 'CONTENT':
            return Object.assign({}, OnboardingDataDtoToJSON(value), { type: 'CONTENT' } as const);
        case 'KYC':
            return Object.assign({}, OnboardingDataDtoToJSON(value), { type: 'KYC' } as const);
        case 'ORDER_CONFIRM':
            return Object.assign({}, OnboardingDataOrderConfirmDtoToJSON(value), { type: 'ORDER_CONFIRM' } as const);
        case 'ORDER_MSISDN':
            return Object.assign({}, OnboardingDataDtoToJSON(value), { type: 'ORDER_MSISDN' } as const);
        case 'ORDER_PLAN':
            return Object.assign({}, OnboardingDataDtoToJSON(value), { type: 'ORDER_PLAN' } as const);
        case 'ORDER_PROCESS':
            return Object.assign({}, OnboardingDataDtoToJSON(value), { type: 'ORDER_PROCESS' } as const);
        case 'ORDER_SIM_TYPE':
            return Object.assign({}, OnboardingDataDtoToJSON(value), { type: 'ORDER_SIM_TYPE' } as const);
        case 'PAYMENT':
            return Object.assign({}, OnboardingDataDtoToJSON(value), { type: 'PAYMENT' } as const);
        default:
            throw new Error(`No variant of PublicOnboardingStageDtoData exists with 'type=${value['type']}'`);
    }

}

