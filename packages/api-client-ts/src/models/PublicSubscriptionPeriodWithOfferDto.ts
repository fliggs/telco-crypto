/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubscriptionPeriodStatus } from './SubscriptionPeriodStatus';
import {
    SubscriptionPeriodStatusFromJSON,
    SubscriptionPeriodStatusFromJSONTyped,
    SubscriptionPeriodStatusToJSON,
    SubscriptionPeriodStatusToJSONTyped,
} from './SubscriptionPeriodStatus';
import type { PublicOfferWithPlanDto } from './PublicOfferWithPlanDto';
import {
    PublicOfferWithPlanDtoFromJSON,
    PublicOfferWithPlanDtoFromJSONTyped,
    PublicOfferWithPlanDtoToJSON,
    PublicOfferWithPlanDtoToJSONTyped,
} from './PublicOfferWithPlanDto';

/**
 * 
 * @export
 * @interface PublicSubscriptionPeriodWithOfferDto
 */
export interface PublicSubscriptionPeriodWithOfferDto {
    /**
     * 
     * @type {SubscriptionPeriodStatus}
     * @memberof PublicSubscriptionPeriodWithOfferDto
     */
    status: SubscriptionPeriodStatus;
    /**
     * 
     * @type {string}
     * @memberof PublicSubscriptionPeriodWithOfferDto
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof PublicSubscriptionPeriodWithOfferDto
     */
    startsAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PublicSubscriptionPeriodWithOfferDto
     */
    endsAt: Date;
    /**
     * 
     * @type {string}
     * @memberof PublicSubscriptionPeriodWithOfferDto
     */
    offerId: string;
    /**
     * 
     * @type {PublicOfferWithPlanDto}
     * @memberof PublicSubscriptionPeriodWithOfferDto
     */
    offer: PublicOfferWithPlanDto;
}



/**
 * Check if a given object implements the PublicSubscriptionPeriodWithOfferDto interface.
 */
export function instanceOfPublicSubscriptionPeriodWithOfferDto(value: object): value is PublicSubscriptionPeriodWithOfferDto {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('startsAt' in value) || value['startsAt'] === undefined) return false;
    if (!('endsAt' in value) || value['endsAt'] === undefined) return false;
    if (!('offerId' in value) || value['offerId'] === undefined) return false;
    if (!('offer' in value) || value['offer'] === undefined) return false;
    return true;
}

export function PublicSubscriptionPeriodWithOfferDtoFromJSON(json: any): PublicSubscriptionPeriodWithOfferDto {
    return PublicSubscriptionPeriodWithOfferDtoFromJSONTyped(json, false);
}

export function PublicSubscriptionPeriodWithOfferDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicSubscriptionPeriodWithOfferDto {
    if (json == null) {
        return json;
    }
    return {
        
        'status': SubscriptionPeriodStatusFromJSON(json['status']),
        'id': json['id'],
        'startsAt': (new Date(json['startsAt'])),
        'endsAt': (new Date(json['endsAt'])),
        'offerId': json['offerId'],
        'offer': PublicOfferWithPlanDtoFromJSON(json['offer']),
    };
}

export function PublicSubscriptionPeriodWithOfferDtoToJSON(json: any): PublicSubscriptionPeriodWithOfferDto {
    return PublicSubscriptionPeriodWithOfferDtoToJSONTyped(json, false);
}

export function PublicSubscriptionPeriodWithOfferDtoToJSONTyped(value?: PublicSubscriptionPeriodWithOfferDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': SubscriptionPeriodStatusToJSON(value['status']),
        'id': value['id'],
        'startsAt': ((value['startsAt']).toISOString()),
        'endsAt': ((value['endsAt']).toISOString()),
        'offerId': value['offerId'],
        'offer': PublicOfferWithPlanDtoToJSON(value['offer']),
    };
}

