/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthProvider } from './AuthProvider';
import {
    AuthProviderFromJSON,
    AuthProviderFromJSONTyped,
    AuthProviderToJSON,
    AuthProviderToJSONTyped,
} from './AuthProvider';

/**
 * 
 * @export
 * @interface PublicAuthStrategyDto
 */
export interface PublicAuthStrategyDto {
    /**
     * 
     * @type {AuthProvider}
     * @memberof PublicAuthStrategyDto
     */
    provider: AuthProvider;
    /**
     * 
     * @type {string}
     * @memberof PublicAuthStrategyDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAuthStrategyDto
     */
    title: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PublicAuthStrategyDto
     */
    tags?: Array<string> | null;
}



/**
 * Check if a given object implements the PublicAuthStrategyDto interface.
 */
export function instanceOfPublicAuthStrategyDto(value: object): value is PublicAuthStrategyDto {
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function PublicAuthStrategyDtoFromJSON(json: any): PublicAuthStrategyDto {
    return PublicAuthStrategyDtoFromJSONTyped(json, false);
}

export function PublicAuthStrategyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicAuthStrategyDto {
    if (json == null) {
        return json;
    }
    return {
        
        'provider': AuthProviderFromJSON(json['provider']),
        'name': json['name'],
        'title': json['title'],
        'tags': json['tags'] == null ? undefined : json['tags'],
    };
}

export function PublicAuthStrategyDtoToJSON(json: any): PublicAuthStrategyDto {
    return PublicAuthStrategyDtoToJSONTyped(json, false);
}

export function PublicAuthStrategyDtoToJSONTyped(value?: PublicAuthStrategyDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'provider': AuthProviderToJSON(value['provider']),
        'name': value['name'],
        'title': value['title'],
        'tags': value['tags'],
    };
}

