/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DeviceType } from './DeviceType';
import {
    DeviceTypeFromJSON,
    DeviceTypeFromJSONTyped,
    DeviceTypeToJSON,
    DeviceTypeToJSONTyped,
} from './DeviceType';

/**
 * 
 * @export
 * @interface PublicDeviceDto
 */
export interface PublicDeviceDto {
    /**
     * 
     * @type {DeviceType}
     * @memberof PublicDeviceDto
     */
    type: DeviceType;
    /**
     * 
     * @type {string}
     * @memberof PublicDeviceDto
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof PublicDeviceDto
     */
    eSimSupport: boolean;
}



/**
 * Check if a given object implements the PublicDeviceDto interface.
 */
export function instanceOfPublicDeviceDto(value: object): value is PublicDeviceDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('eSimSupport' in value) || value['eSimSupport'] === undefined) return false;
    return true;
}

export function PublicDeviceDtoFromJSON(json: any): PublicDeviceDto {
    return PublicDeviceDtoFromJSONTyped(json, false);
}

export function PublicDeviceDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicDeviceDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': DeviceTypeFromJSON(json['type']),
        'name': json['name'],
        'eSimSupport': json['eSimSupport'],
    };
}

export function PublicDeviceDtoToJSON(json: any): PublicDeviceDto {
    return PublicDeviceDtoToJSONTyped(json, false);
}

export function PublicDeviceDtoToJSONTyped(value?: PublicDeviceDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': DeviceTypeToJSON(value['type']),
        'name': value['name'],
        'eSimSupport': value['eSimSupport'],
    };
}

