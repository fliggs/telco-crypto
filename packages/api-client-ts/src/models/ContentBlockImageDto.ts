/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContentBlockImageDto
 */
export interface ContentBlockImageDto {
    /**
     * 
     * @type {string}
     * @memberof ContentBlockImageDto
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockImageDto
     */
    image: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockImageDto
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockImageDto
     */
    type: string;
}

/**
 * Check if a given object implements the ContentBlockImageDto interface.
 */
export function instanceOfContentBlockImageDto(value: object): value is ContentBlockImageDto {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ContentBlockImageDtoFromJSON(json: any): ContentBlockImageDto {
    return ContentBlockImageDtoFromJSONTyped(json, false);
}

export function ContentBlockImageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentBlockImageDto {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'image': json['image'],
        'title': json['title'] == null ? undefined : json['title'],
        'type': json['type'],
    };
}

export function ContentBlockImageDtoToJSON(json: any): ContentBlockImageDto {
    return ContentBlockImageDtoToJSONTyped(json, false);
}

export function ContentBlockImageDtoToJSONTyped(value?: ContentBlockImageDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'image': value['image'],
        'title': value['title'],
        'type': value['type'],
    };
}

