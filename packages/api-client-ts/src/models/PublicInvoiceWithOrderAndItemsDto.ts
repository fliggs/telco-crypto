/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicOrderWithSubscriptionDto } from './PublicOrderWithSubscriptionDto';
import {
    PublicOrderWithSubscriptionDtoFromJSON,
    PublicOrderWithSubscriptionDtoFromJSONTyped,
    PublicOrderWithSubscriptionDtoToJSON,
    PublicOrderWithSubscriptionDtoToJSONTyped,
} from './PublicOrderWithSubscriptionDto';
import type { PublicInvoiceItemDto } from './PublicInvoiceItemDto';
import {
    PublicInvoiceItemDtoFromJSON,
    PublicInvoiceItemDtoFromJSONTyped,
    PublicInvoiceItemDtoToJSON,
    PublicInvoiceItemDtoToJSONTyped,
} from './PublicInvoiceItemDto';

/**
 * 
 * @export
 * @interface PublicInvoiceWithOrderAndItemsDto
 */
export interface PublicInvoiceWithOrderAndItemsDto {
    /**
     * 
     * @type {string}
     * @memberof PublicInvoiceWithOrderAndItemsDto
     */
    totalCost: string;
    /**
     * 
     * @type {string}
     * @memberof PublicInvoiceWithOrderAndItemsDto
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof PublicInvoiceWithOrderAndItemsDto
     */
    invoicedAt: Date;
    /**
     * 
     * @type {Array<PublicInvoiceItemDto>}
     * @memberof PublicInvoiceWithOrderAndItemsDto
     */
    items: Array<PublicInvoiceItemDto>;
    /**
     * 
     * @type {PublicOrderWithSubscriptionDto}
     * @memberof PublicInvoiceWithOrderAndItemsDto
     */
    order: PublicOrderWithSubscriptionDto;
}

/**
 * Check if a given object implements the PublicInvoiceWithOrderAndItemsDto interface.
 */
export function instanceOfPublicInvoiceWithOrderAndItemsDto(value: object): value is PublicInvoiceWithOrderAndItemsDto {
    if (!('totalCost' in value) || value['totalCost'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('invoicedAt' in value) || value['invoicedAt'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    return true;
}

export function PublicInvoiceWithOrderAndItemsDtoFromJSON(json: any): PublicInvoiceWithOrderAndItemsDto {
    return PublicInvoiceWithOrderAndItemsDtoFromJSONTyped(json, false);
}

export function PublicInvoiceWithOrderAndItemsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicInvoiceWithOrderAndItemsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'totalCost': json['totalCost'],
        'id': json['id'],
        'invoicedAt': (new Date(json['invoicedAt'])),
        'items': ((json['items'] as Array<any>).map(PublicInvoiceItemDtoFromJSON)),
        'order': PublicOrderWithSubscriptionDtoFromJSON(json['order']),
    };
}

export function PublicInvoiceWithOrderAndItemsDtoToJSON(json: any): PublicInvoiceWithOrderAndItemsDto {
    return PublicInvoiceWithOrderAndItemsDtoToJSONTyped(json, false);
}

export function PublicInvoiceWithOrderAndItemsDtoToJSONTyped(value?: PublicInvoiceWithOrderAndItemsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalCost': value['totalCost'],
        'id': value['id'],
        'invoicedAt': ((value['invoicedAt']).toISOString()),
        'items': ((value['items'] as Array<any>).map(PublicInvoiceItemDtoToJSON)),
        'order': PublicOrderWithSubscriptionDtoToJSON(value['order']),
    };
}

