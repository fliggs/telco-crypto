/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VolumeType } from './VolumeType';
import {
    VolumeTypeFromJSON,
    VolumeTypeFromJSONTyped,
    VolumeTypeToJSON,
    VolumeTypeToJSONTyped,
} from './VolumeType';

/**
 * 
 * @export
 * @interface PublicVolumeUsageDto
 */
export interface PublicVolumeUsageDto {
    /**
     * 
     * @type {VolumeType}
     * @memberof PublicVolumeUsageDto
     */
    type: VolumeType;
    /**
     * 
     * @type {string}
     * @memberof PublicVolumeUsageDto
     */
    amountTotal: string;
    /**
     * 
     * @type {string}
     * @memberof PublicVolumeUsageDto
     */
    amountUsed: string;
    /**
     * 
     * @type {boolean}
     * @memberof PublicVolumeUsageDto
     */
    isUnlimited: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PublicVolumeUsageDto
     */
    isRoaming: boolean;
    /**
     * 
     * @type {string}
     * @memberof PublicVolumeUsageDto
     */
    subscriptionId?: string;
}



/**
 * Check if a given object implements the PublicVolumeUsageDto interface.
 */
export function instanceOfPublicVolumeUsageDto(value: object): value is PublicVolumeUsageDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('amountTotal' in value) || value['amountTotal'] === undefined) return false;
    if (!('amountUsed' in value) || value['amountUsed'] === undefined) return false;
    if (!('isUnlimited' in value) || value['isUnlimited'] === undefined) return false;
    if (!('isRoaming' in value) || value['isRoaming'] === undefined) return false;
    return true;
}

export function PublicVolumeUsageDtoFromJSON(json: any): PublicVolumeUsageDto {
    return PublicVolumeUsageDtoFromJSONTyped(json, false);
}

export function PublicVolumeUsageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicVolumeUsageDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': VolumeTypeFromJSON(json['type']),
        'amountTotal': json['amountTotal'],
        'amountUsed': json['amountUsed'],
        'isUnlimited': json['isUnlimited'],
        'isRoaming': json['isRoaming'],
        'subscriptionId': json['subscriptionId'] == null ? undefined : json['subscriptionId'],
    };
}

export function PublicVolumeUsageDtoToJSON(json: any): PublicVolumeUsageDto {
    return PublicVolumeUsageDtoToJSONTyped(json, false);
}

export function PublicVolumeUsageDtoToJSONTyped(value?: PublicVolumeUsageDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': VolumeTypeToJSON(value['type']),
        'amountTotal': value['amountTotal'],
        'amountUsed': value['amountUsed'],
        'isUnlimited': value['isUnlimited'],
        'isRoaming': value['isRoaming'],
        'subscriptionId': value['subscriptionId'],
    };
}

