/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicOrderStepDto } from './PublicOrderStepDto';
import {
    PublicOrderStepDtoFromJSON,
    PublicOrderStepDtoFromJSONTyped,
    PublicOrderStepDtoToJSON,
    PublicOrderStepDtoToJSONTyped,
} from './PublicOrderStepDto';
import type { OrderStatus } from './OrderStatus';
import {
    OrderStatusFromJSON,
    OrderStatusFromJSONTyped,
    OrderStatusToJSON,
    OrderStatusToJSONTyped,
} from './OrderStatus';
import type { OrderType } from './OrderType';
import {
    OrderTypeFromJSON,
    OrderTypeFromJSONTyped,
    OrderTypeToJSON,
    OrderTypeToJSONTyped,
} from './OrderType';
import type { PublicSubscriptionDto } from './PublicSubscriptionDto';
import {
    PublicSubscriptionDtoFromJSON,
    PublicSubscriptionDtoFromJSONTyped,
    PublicSubscriptionDtoToJSON,
    PublicSubscriptionDtoToJSONTyped,
} from './PublicSubscriptionDto';
import type { PublicOrderSigningDto } from './PublicOrderSigningDto';
import {
    PublicOrderSigningDtoFromJSON,
    PublicOrderSigningDtoFromJSONTyped,
    PublicOrderSigningDtoToJSON,
    PublicOrderSigningDtoToJSONTyped,
} from './PublicOrderSigningDto';
import type { PublicOfferWithPlanDto } from './PublicOfferWithPlanDto';
import {
    PublicOfferWithPlanDtoFromJSON,
    PublicOfferWithPlanDtoFromJSONTyped,
    PublicOfferWithPlanDtoToJSON,
    PublicOfferWithPlanDtoToJSONTyped,
} from './PublicOfferWithPlanDto';

/**
 * 
 * @export
 * @interface PublicOrderWithDetailsDto
 */
export interface PublicOrderWithDetailsDto {
    /**
     * 
     * @type {OrderType}
     * @memberof PublicOrderWithDetailsDto
     */
    type: OrderType;
    /**
     * 
     * @type {OrderStatus}
     * @memberof PublicOrderWithDetailsDto
     */
    status: OrderStatus;
    /**
     * 
     * @type {string}
     * @memberof PublicOrderWithDetailsDto
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof PublicOrderWithDetailsDto
     */
    stepNo: number | null;
    /**
     * 
     * @type {Date}
     * @memberof PublicOrderWithDetailsDto
     */
    startedAt: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PublicOrderWithDetailsDto
     */
    completedAt: Date | null;
    /**
     * 
     * @type {PublicOrderStepDto}
     * @memberof PublicOrderWithDetailsDto
     */
    currentStep: PublicOrderStepDto | null;
    /**
     * 
     * @type {PublicOfferWithPlanDto}
     * @memberof PublicOrderWithDetailsDto
     */
    offer: PublicOfferWithPlanDto | null;
    /**
     * 
     * @type {PublicSubscriptionDto}
     * @memberof PublicOrderWithDetailsDto
     */
    subscription: PublicSubscriptionDto | null;
    /**
     * 
     * @type {PublicOrderSigningDto}
     * @memberof PublicOrderWithDetailsDto
     */
    signing: PublicOrderSigningDto | null;
    /**
     * 
     * @type {string}
     * @memberof PublicOrderWithDetailsDto
     */
    subscriptionId: string | null;
}



/**
 * Check if a given object implements the PublicOrderWithDetailsDto interface.
 */
export function instanceOfPublicOrderWithDetailsDto(value: object): value is PublicOrderWithDetailsDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('stepNo' in value) || value['stepNo'] === undefined) return false;
    if (!('startedAt' in value) || value['startedAt'] === undefined) return false;
    if (!('completedAt' in value) || value['completedAt'] === undefined) return false;
    if (!('currentStep' in value) || value['currentStep'] === undefined) return false;
    if (!('offer' in value) || value['offer'] === undefined) return false;
    if (!('subscription' in value) || value['subscription'] === undefined) return false;
    if (!('signing' in value) || value['signing'] === undefined) return false;
    if (!('subscriptionId' in value) || value['subscriptionId'] === undefined) return false;
    return true;
}

export function PublicOrderWithDetailsDtoFromJSON(json: any): PublicOrderWithDetailsDto {
    return PublicOrderWithDetailsDtoFromJSONTyped(json, false);
}

export function PublicOrderWithDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicOrderWithDetailsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': OrderTypeFromJSON(json['type']),
        'status': OrderStatusFromJSON(json['status']),
        'id': json['id'],
        'stepNo': json['stepNo'],
        'startedAt': (json['startedAt'] == null ? null : new Date(json['startedAt'])),
        'completedAt': (json['completedAt'] == null ? null : new Date(json['completedAt'])),
        'currentStep': PublicOrderStepDtoFromJSON(json['currentStep']),
        'offer': PublicOfferWithPlanDtoFromJSON(json['offer']),
        'subscription': PublicSubscriptionDtoFromJSON(json['subscription']),
        'signing': PublicOrderSigningDtoFromJSON(json['signing']),
        'subscriptionId': json['subscriptionId'],
    };
}

export function PublicOrderWithDetailsDtoToJSON(json: any): PublicOrderWithDetailsDto {
    return PublicOrderWithDetailsDtoToJSONTyped(json, false);
}

export function PublicOrderWithDetailsDtoToJSONTyped(value?: PublicOrderWithDetailsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': OrderTypeToJSON(value['type']),
        'status': OrderStatusToJSON(value['status']),
        'id': value['id'],
        'stepNo': value['stepNo'],
        'startedAt': (value['startedAt'] == null ? null : (value['startedAt'] as any).toISOString()),
        'completedAt': (value['completedAt'] == null ? null : (value['completedAt'] as any).toISOString()),
        'currentStep': PublicOrderStepDtoToJSON(value['currentStep']),
        'offer': PublicOfferWithPlanDtoToJSON(value['offer']),
        'subscription': PublicSubscriptionDtoToJSON(value['subscription']),
        'signing': PublicOrderSigningDtoToJSON(value['signing']),
        'subscriptionId': value['subscriptionId'],
    };
}

