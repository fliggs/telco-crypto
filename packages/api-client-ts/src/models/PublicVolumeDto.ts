/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VolumeType } from './VolumeType';
import {
    VolumeTypeFromJSON,
    VolumeTypeFromJSONTyped,
    VolumeTypeToJSON,
    VolumeTypeToJSONTyped,
} from './VolumeType';

/**
 * 
 * @export
 * @interface PublicVolumeDto
 */
export interface PublicVolumeDto {
    /**
     * 
     * @type {VolumeType}
     * @memberof PublicVolumeDto
     */
    type: VolumeType;
    /**
     * 
     * @type {string}
     * @memberof PublicVolumeDto
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof PublicVolumeDto
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof PublicVolumeDto
     */
    isUnlimited: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PublicVolumeDto
     */
    isRoaming: boolean;
}



/**
 * Check if a given object implements the PublicVolumeDto interface.
 */
export function instanceOfPublicVolumeDto(value: object): value is PublicVolumeDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isUnlimited' in value) || value['isUnlimited'] === undefined) return false;
    if (!('isRoaming' in value) || value['isRoaming'] === undefined) return false;
    return true;
}

export function PublicVolumeDtoFromJSON(json: any): PublicVolumeDto {
    return PublicVolumeDtoFromJSONTyped(json, false);
}

export function PublicVolumeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicVolumeDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': VolumeTypeFromJSON(json['type']),
        'amount': json['amount'],
        'id': json['id'],
        'isUnlimited': json['isUnlimited'],
        'isRoaming': json['isRoaming'],
    };
}

export function PublicVolumeDtoToJSON(json: any): PublicVolumeDto {
    return PublicVolumeDtoToJSONTyped(json, false);
}

export function PublicVolumeDtoToJSONTyped(value?: PublicVolumeDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': VolumeTypeToJSON(value['type']),
        'amount': value['amount'],
        'id': value['id'],
        'isUnlimited': value['isUnlimited'],
        'isRoaming': value['isRoaming'],
    };
}

