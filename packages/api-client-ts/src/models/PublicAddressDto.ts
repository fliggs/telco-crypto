/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressType } from './AddressType';
import {
    AddressTypeFromJSON,
    AddressTypeFromJSONTyped,
    AddressTypeToJSON,
    AddressTypeToJSONTyped,
} from './AddressType';

/**
 * 
 * @export
 * @interface PublicAddressDto
 */
export interface PublicAddressDto {
    /**
     * 
     * @type {AddressType}
     * @memberof PublicAddressDto
     */
    type: AddressType;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    name: string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    line1: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    line2: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    line3: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    line4: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    city: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    postalCode: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    province: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAddressDto
     */
    country: string;
}



/**
 * Check if a given object implements the PublicAddressDto interface.
 */
export function instanceOfPublicAddressDto(value: object): value is PublicAddressDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('line1' in value) || value['line1'] === undefined) return false;
    if (!('line2' in value) || value['line2'] === undefined) return false;
    if (!('line3' in value) || value['line3'] === undefined) return false;
    if (!('line4' in value) || value['line4'] === undefined) return false;
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('postalCode' in value) || value['postalCode'] === undefined) return false;
    if (!('province' in value) || value['province'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    return true;
}

export function PublicAddressDtoFromJSON(json: any): PublicAddressDto {
    return PublicAddressDtoFromJSONTyped(json, false);
}

export function PublicAddressDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicAddressDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': AddressTypeFromJSON(json['type']),
        'id': json['id'],
        'name': json['name'],
        'line1': json['line1'],
        'line2': json['line2'],
        'line3': json['line3'],
        'line4': json['line4'],
        'city': json['city'],
        'postalCode': json['postalCode'],
        'province': json['province'],
        'country': json['country'],
    };
}

export function PublicAddressDtoToJSON(json: any): PublicAddressDto {
    return PublicAddressDtoToJSONTyped(json, false);
}

export function PublicAddressDtoToJSONTyped(value?: PublicAddressDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': AddressTypeToJSON(value['type']),
        'id': value['id'],
        'name': value['name'],
        'line1': value['line1'],
        'line2': value['line2'],
        'line3': value['line3'],
        'line4': value['line4'],
        'city': value['city'],
        'postalCode': value['postalCode'],
        'province': value['province'],
        'country': value['country'],
    };
}

