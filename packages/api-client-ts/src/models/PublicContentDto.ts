/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicContentDtoSummary } from './PublicContentDtoSummary';
import {
    PublicContentDtoSummaryFromJSON,
    PublicContentDtoSummaryFromJSONTyped,
    PublicContentDtoSummaryToJSON,
    PublicContentDtoSummaryToJSONTyped,
} from './PublicContentDtoSummary';

/**
 * 
 * @export
 * @interface PublicContentDto
 */
export interface PublicContentDto {
    /**
     * 
     * @type {PublicContentDtoSummary}
     * @memberof PublicContentDto
     */
    summary?: PublicContentDtoSummary | null;
    /**
     * 
     * @type {Array<PublicContentDtoSummary>}
     * @memberof PublicContentDto
     */
    details?: Array<PublicContentDtoSummary> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PublicContentDto
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof PublicContentDto
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PublicContentDto
     */
    bgImage?: string;
    /**
     * 
     * @type {string}
     * @memberof PublicContentDto
     */
    color?: string;
}

/**
 * Check if a given object implements the PublicContentDto interface.
 */
export function instanceOfPublicContentDto(value: object): value is PublicContentDto {
    return true;
}

export function PublicContentDtoFromJSON(json: any): PublicContentDto {
    return PublicContentDtoFromJSONTyped(json, false);
}

export function PublicContentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicContentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'summary': json['summary'] == null ? undefined : PublicContentDtoSummaryFromJSON(json['summary']),
        'details': json['details'] == null ? undefined : ((json['details'] as Array<any>).map(PublicContentDtoSummaryFromJSON)),
        'tags': json['tags'] == null ? undefined : json['tags'],
        'title': json['title'] == null ? undefined : json['title'],
        'bgImage': json['bgImage'] == null ? undefined : json['bgImage'],
        'color': json['color'] == null ? undefined : json['color'],
    };
}

export function PublicContentDtoToJSON(json: any): PublicContentDto {
    return PublicContentDtoToJSONTyped(json, false);
}

export function PublicContentDtoToJSONTyped(value?: PublicContentDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'summary': PublicContentDtoSummaryToJSON(value['summary']),
        'details': value['details'] == null ? undefined : ((value['details'] as Array<any>).map(PublicContentDtoSummaryToJSON)),
        'tags': value['tags'],
        'title': value['title'],
        'bgImage': value['bgImage'],
        'color': value['color'],
    };
}

