/* tslint:disable */
/* eslint-disable */
/**
 * Fliggs
 * This is our cool new API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContentBlockSpacerDto
 */
export interface ContentBlockSpacerDto {
    /**
     * 
     * @type {string}
     * @memberof ContentBlockSpacerDto
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockSpacerDto
     */
    spacing: string;
    /**
     * 
     * @type {string}
     * @memberof ContentBlockSpacerDto
     */
    type: string;
}

/**
 * Check if a given object implements the ContentBlockSpacerDto interface.
 */
export function instanceOfContentBlockSpacerDto(value: object): value is ContentBlockSpacerDto {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('spacing' in value) || value['spacing'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ContentBlockSpacerDtoFromJSON(json: any): ContentBlockSpacerDto {
    return ContentBlockSpacerDtoFromJSONTyped(json, false);
}

export function ContentBlockSpacerDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentBlockSpacerDto {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'spacing': json['spacing'],
        'type': json['type'],
    };
}

export function ContentBlockSpacerDtoToJSON(json: any): ContentBlockSpacerDto {
    return ContentBlockSpacerDtoToJSONTyped(json, false);
}

export function ContentBlockSpacerDtoToJSONTyped(value?: ContentBlockSpacerDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'spacing': value['spacing'],
        'type': value['type'],
    };
}

