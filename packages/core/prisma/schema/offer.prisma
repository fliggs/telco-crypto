model Offer {
  id              String    @id @default(uuid()) @db.Uuid
  legalId         String    @default("legal-id")
  name            String
  version         Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now()) @updatedAt
  isActive        Boolean
  isPublic        Boolean
  sort            Int       @default(0)
  validFrom       DateTime?
  validUntil      DateTime?
  content         Json /// [ContentData]
  originalCost    Decimal?  @db.Decimal(19, 4)
  cost            Decimal   @db.Decimal(19, 4)
  providedCredits Decimal?  @db.Decimal(19, 4)

  planId String @db.Uuid
  plan   Plan   @relation(fields: [planId], references: [id])

  ordersAddPlan        OrderAddPlanDetails[]
  ordersRenewPlan      OrderRenewPlanDetails[]
  ordersChangePlan     OrderChangePlanDetails[]
  ordersReactivatePlan OrderReactivatePlanDetails[]
  promoCodes           PromoCode[]
  subscriptions        Subscription[]
  subscriptionPeriods  SubscriptionPeriod[]
  rewards              Reward[]
  rewardPayouts        RewardPayout[]
  parents              OfferToOffer[]               @relation(name: "child")
  children             OfferToOffer[]               @relation(name: "parent")

  @@unique([name, version])
  @@index([isActive])
}

model OfferToOffer {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  parentId String @db.Uuid
  parent   Offer  @relation(name: "parent", fields: [parentId], references: [id])

  childId String @db.Uuid
  child   Offer  @relation(name: "child", fields: [childId], references: [id])

  @@unique([parentId, childId])
}
